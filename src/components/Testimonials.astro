---
const testimonials = [
  {
    name: "Ana Popescu",
    city: "București",
    image: "/images/testimonial-1.jpg",
    text: "Nu am crezut că sprâncenele mele pot arăta atât de bine și natural. Andra a înțeles exact ce îmi doresc și rezultatul a fost peste așteptări. O recomand cu drag!"
  },
  {
    name: "Maria Ionescu",
    city: "București",
    image: "/images/testimonial-2.jpg",
    text: "Serviciile de microblading oferite de Andra au schimbat complet felul în care arăt. Nu mai pierd timpul dimineața încercând să îmi desenez sprâncenele. Sunt perfecte de când mă trezesc!"
  },
  {
    name: "Elena Dumitrescu",
    city: "Bragadiru, IF",
    image: "/images/testimonial-3.jpg",
    text: "Aveam emoții înainte de procedură, dar Andra m-a făcut să mă simt în siguranță și confortabil. Rezultatul este absolut minunat și foarte natural. Toată lumea mă întreabă ce am făcut de arăt atât de bine."
  },
  {
    name: "Diana Vasilescu",
    city: "București",
    image: "/images/testimonial-4.jpg",
    text: "Am fost încântată de rezultatul microbladingului. Sprâncenele mele arată naturale și perfecte. Recomand cu încredere!"
  }
];
---

<section class="testimonials">
  <div class="container">
    <div class="section-header" data-aos="fade-up">
      <h2 class="section-title">Ce spun clientele</h2>
      <p class="section-description">
        Descoperă experiențele celor care s-au bucurat de serviciile noastre
      </p>
    </div>
    
    <div class="testimonials-slider" data-aos="fade-up" data-aos-delay="200">
      {testimonials.map(testimonial => (
        <div class="testimonial-card">
          <div class="testimonial-image">
            <img src={testimonial.image} alt={`Testimonial - ${testimonial.name}`} />
          </div>
          <div class="testimonial-content">
            <div class="testimonial-quote">
              <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="currentColor" opacity="0.2">
                <path d="M10 11H4V5h6v6zm10 0h-6V5h6v6zm-10 10H4v-6h6v6zm10 0h-6v-6h6v6z"/>
              </svg>
            </div>
            <div class="testimonial-text">
              {testimonial.text}
            </div>
            <div class="testimonial-author">
              <div class="author-name">{testimonial.name}</div>
              <div class="author-city">{testimonial.city}</div>
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <div class="testimonials-dots" data-aos="fade-up" data-aos-delay="300">
      {testimonials.map((_, index) => (
        <button class={`dot ${index === 0 ? 'active' : ''}`} data-index={index} aria-label={`Testimonial ${index + 1}`}></button>
      ))}
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const slider = document.querySelector('.testimonials-slider') as HTMLElement;
    const dots = document.querySelectorAll('.testimonials-dots .dot');
    let slideIndex = 0;
    let slideWidth = 0;
    let autoplayTimer: number;
    
    // Initialize
    function initSlider() {
      if (!slider) return;
      
      const slides = slider.querySelectorAll('.testimonial-card');
      if (slides.length === 0) return;
      
      slideWidth = (slides[0] as HTMLElement).offsetWidth;
      
      // Set initial position
      updateSlidePosition();
      
      // Add event listeners to dots
      dots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
          slideIndex = index;
          updateSlidePosition();
          updateActiveDot();
          resetAutoplay();
        });
      });
      
      // Start autoplay
      startAutoplay();
      
      // Reset slideWidth on window resize
      window.addEventListener('resize', () => {
        const currentSlide = slider.querySelectorAll('.testimonial-card')[0] as HTMLElement;
        if (currentSlide) {
          slideWidth = currentSlide.offsetWidth;
          updateSlidePosition();
        }
      });
      
      // Pause autoplay on hover
      slider.addEventListener('mouseenter', () => {
        clearInterval(autoplayTimer);
      });
      
      slider.addEventListener('mouseleave', () => {
        startAutoplay();
      });
    }
    
    function updateSlidePosition() {
      if (!slider) return;
      slider.style.transform = `translateX(-${slideIndex * slideWidth}px)`;
    }
    
    function updateActiveDot() {
      dots.forEach((dot, index) => {
        if (index === slideIndex) {
          dot.classList.add('active');
        } else {
          dot.classList.remove('active');
        }
      });
    }
    
    function startAutoplay() {
      autoplayTimer = window.setInterval(() => {
        slideIndex = (slideIndex + 1) % dots.length;
        updateSlidePosition();
        updateActiveDot();
      }, 5000);
    }
    
    function resetAutoplay() {
      clearInterval(autoplayTimer);
      startAutoplay();
    }
    
    initSlider();
  });
</script>

<style>
  .testimonials {
    padding: 5rem 0;
    background-color: var(--bg-color);
    overflow: hidden;
    transition: background-color 0.3s ease;
  }
  
  .section-header {
    text-align: center;
    max-width: 700px;
    margin: 0 auto 3rem;
  }
  
  .section-title {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: var(--text-color);
    transition: color 0.3s ease;
  }
  
  .section-description {
    font-size: 1.1rem;
    color: var(--secondary-text, #666);
    line-height: 1.6;
    transition: color 0.3s ease;
  }
  
  .testimonials-slider {
    display: flex;
    transition: transform 0.5s ease;
    margin-bottom: 2rem;
  }
  
  .testimonial-card {
    flex: 0 0 100%;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    max-width: 100%;
  }
  
  @media (min-width: 768px) {
    .testimonial-card {
      flex-direction: row;
      gap: 2rem;
      align-items: center;
    }
  }
  
  .testimonial-image {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    overflow: hidden;
    margin-bottom: 1rem;
    border: 3px solid var(--color-primary);
    flex-shrink: 0;
  }
  
  @media (min-width: 768px) {
    .testimonial-image {
      width: 120px;
      height: 120px;
      margin-bottom: 0;
    }
  }
  
  .testimonial-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .testimonial-content {
    position: relative;
    background-color: var(--card-bg);
    border-radius: 8px;
    padding: 2rem;
    box-shadow: 0 5px 15px var(--shadow-color);
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
  }
  
  .testimonial-quote {
    position: absolute;
    top: 1rem;
    right: 1rem;
    color: var(--color-primary);
    opacity: 0.2;
  }
  
  .testimonial-text {
    font-size: 1.1rem;
    line-height: 1.7;
    margin-bottom: 1.5rem;
    color: var(--text-color);
    transition: color 0.3s ease;
  }
  
  .testimonial-author {
    display: flex;
    flex-direction: column;
  }
  
  .author-name {
    font-weight: 700;
    font-size: 1.1rem;
    color: var(--text-color);
    transition: color 0.3s ease;
  }
  
  .author-city {
    color: var(--secondary-text, #666);
    font-size: 0.9rem;
    transition: color 0.3s ease;
  }
  
  .testimonials-dots {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
  }
  
  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: var(--border-color, #ddd);
    border: none;
    padding: 0;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  
  .dot.active {
    background-color: var(--color-primary);
  }
  
  @media (max-width: 768px) {
    .testimonials {
      padding: 3rem 0;
    }
    
    .section-title {
      font-size: 2rem;
    }
    
    .testimonial-content {
      padding: 1.5rem;
    }
    
    .testimonial-text {
      font-size: 1rem;
    }
  }
</style> 